fragment Work on works {
  id
  portfolio
  order
  files(order_by: { order: asc_nulls_last }) {
    ...WorkFile
  }
  specifications(order_by: { order: asc_nulls_last }) {
    ...WorkSpecification
  }
}
fragment File on work_files {
  id
  mimetype
  key
  originalname
  size
  password
}
fragment WorkFile on work_files {
  work_id
  application_id
  order
  ...File
}
fragment WorkSpecification on work_specifications {
  id
  work_id
  application_id
  material
  mediums {
    specification_id
    category_medium {
      ...Medium
    }
  }
  year
  title
  order
  number_of_editions
  description
  dimensions_width
  dimensions_height
  dimensions_depth
}

# User
mutation AddWork($application_id: uuid!, $portfolio: Boolean) {
  insert_works_one(
    object: {
      application_id: $application_id
      portfolio: $portfolio
      specifications: { data: { application_id: $application_id, order: 0 } }
    }
  ) {
    ...Work
  }
}
mutation DeleteWork($id: uuid!) {
  delete_works_by_pk(id: $id) {
    id
    portfolio
    application_id
  }
}

mutation AddPortfolioSpecification(
  $application_id: uuid!
  $work_id: uuid!
  $order: Int!
) {
  insert_work_specifications_one(
    object: {
      application_id: $application_id
      work_id: $work_id
      order: $order
    }
  ) {
    ...WorkSpecification
  }
}
mutation DeletePortfolioSpecification($id: uuid!) {
  delete_work_specifications_by_pk(id: $id) {
    id
    work_id
    application_id
  }
}

mutation AddWorkFile(
  $id: uuid!
  $application_id: uuid!
  $work_id: uuid!
  $order: Int!
  $key: String!
  $mimetype: String!
  $originalname: String!
  $size: numeric!
  $password: String = ""
) {
  update_applications_by_pk(
    pk_columns: { id: $application_id }
    _set: { updated_at: "now()" }
  ) {
    id
    updated_at
  }
  insert_work_files_one(
    object: {
      id: $id
      application_id: $application_id
      key: $key
      mimetype: $mimetype
      order: $order
      originalname: $originalname
      size: $size
      work_id: $work_id
      password: $password
    }
  ) {
    ...WorkFile
  }
}
mutation DeleteWorkFile($id: uuid!, $application_id: uuid!) {
  update_applications_by_pk(
    pk_columns: { id: $application_id }
    _set: { updated_at: "now()" }
  ) {
    id
    updated_at
  }
  delete_work_files_by_pk(id: $id) {
    id
    work_id
  }
}
query GetWorks($application_id: uuid!) {
  works(
    where: {
      application_id: { _eq: $application_id }
      _or: [{ files: {} }, { specifications: { video_url: { _neq: "" } } }]
    }
    order_by: { portfolio: asc_nulls_last, order: asc_nulls_last }
  ) {
    ...Work
  }
}

query GetSingleWorks($application_id: uuid!) {
  works(
    where: {
      application_id: { _eq: $application_id }
      portfolio: { _is_null: true }
    }
    order_by: { order: asc_nulls_last }
  ) {
    ...Work
  }
}
query GetPortfolioWorks($application_id: uuid!) {
  works(
    where: {
      application_id: { _eq: $application_id }
      portfolio: { _eq: true }
    }
    order_by: { order: asc_nulls_last }
  ) {
    ...Work
  }
}

mutation UpdateSpecification(
  $id: uuid!
  $set: work_specifications_set_input!
  $application_id: uuid!
) {
  update_applications_by_pk(
    pk_columns: { id: $application_id }
    _set: { updated_at: "now()" }
  ) {
    id
    updated_at
  }
  update_work_specifications_by_pk(pk_columns: { id: $id }, _set: $set) {
    ...WorkSpecification
  }
}

mutation UpdateWorksOrder($objects: [works_insert_input!]!) {
  insert_works(
    objects: $objects
    on_conflict: { constraint: works_pkey, update_columns: [order] }
  ) {
    returning {
      id
      order
    }
  }
}
mutation UpdateSpecificationsOrder(
  $objects: [work_specifications_insert_input!]!
) {
  insert_work_specifications(
    objects: $objects
    on_conflict: {
      constraint: works_specifications_pkey
      update_columns: [order]
    }
  ) {
    returning {
      id
      order
    }
  }
}
mutation UpdateWorkFilesOrder($objects: [work_files_insert_input!]!) {
  insert_work_files(
    objects: $objects
    on_conflict: { constraint: work_files_pkey, update_columns: [order] }
  ) {
    returning {
      id
      order
    }
  }
}

# Jury

# Admin
