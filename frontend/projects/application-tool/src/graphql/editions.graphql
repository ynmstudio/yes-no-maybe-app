fragment Edition on editions {
  id
  name
  current
  state
  application_end
  application_start
  applications_aggregate {
    aggregate {
      count
    }
  }
}

query GetEdition {
  editions(where: { current: { _eq: true } }) {
    ...Edition
  }
}
subscription EditionState {
  editions(where: { current: { _eq: true } }) {
    state
  }
}

# Admin
query GetAllEditions {
  editions(order_by: { application_start: asc }) {
    ...Edition
  }
}

subscription GetEditionStateAdmin($id: Int!) {
  editions_by_pk(id: $id) {
    state
  }
}

query GetEditionStatistic($id: Int!) {
  applications_total: applications_aggregate(
    where: { edition: { id: { _eq: $id } } }
  ) {
    aggregate {
      count
    }
    nodes {
      state
    }
  }
  applications_untouched: applications_aggregate(
    where: {
      _and: {
        edition: { id: { _eq: $id } }
        _and: [
          { disclaimer: { _eq: false } }
          { statement: { _eq: "" } }
          { _not: { files: {} } }
          { _not: { works: {} } }
          { _not: { specifications: {} } }
          { _not: { payment: {} } }
        ]
      }
    }
  ) {
    aggregate {
      count
    }
    nodes {
      state
    }
  }
  applications_edited: applications_aggregate(
    where: {
      _and: {
        edition: { id: { _eq: $id } }
        _or: [
          { disclaimer: { _eq: true } }
          { statement: { _neq: "" } }
          { files: {} }
          { works: {} }
          { specifications: {} }
          { payment: {} }
        ]
        _not: {
          _and: [
            { disclaimer: { _eq: true } }
            { statement: { _neq: "" } }
            { files: {} }
            { works: {} }
            { specifications: {} }
            { payment: {} }
          ]
        }
      }
    }
  ) {
    aggregate {
      count
    }
    nodes {
      state
    }
  }
  applications_ready: applications_aggregate(
    where: {
      _and: {
        edition: { id: { _eq: $id } }
        _and: [
          { disclaimer: { _eq: true } }
          { statement: { _neq: "" } }
          { files: {} }
          { works: {} }
          { specifications: {} }
          { payment: {} }
        ]
      }
    }
  ) {
    aggregate {
      count
    }
    nodes {
      state
    }
  }
  payments_aggregate(
    where: { application: { edition: { id: { _eq: $id } } } }
  ) {
    aggregate {
      count
    }
  }
}

mutation CreateEdition($name: String!) {
  insert_editions_one(object: { name: $name }) {
    ...Edition
  }
}
mutation RenameEdition($id: Int!, $name: String!) {
  update_editions_by_pk(pk_columns: { id: $id }, _set: { name: $name }) {
    ...Edition
  }
}

mutation SetEditionStatus($id: Int!, $status: Boolean!) {
  update_editions(
    _set: { current: null }
    where: { current: { _is_null: false } }
  ) {
    affected_rows
  }
  update_editions_by_pk(pk_columns: { id: $id }, _set: { current: $status }) {
    ...Edition
  }
}
mutation UpdateEdition(
  $id: Int!
  $application_end: timestamptz!
  $application_start: timestamptz!
  $name: String!
) {
  update_editions_by_pk(
    pk_columns: { id: $id }
    _set: {
      application_end: $application_end
      application_start: $application_start
      name: $name
    }
  ) {
    ...Edition
  }
}

mutation SetEditionWinner($id: Int!, $application_id: uuid) {
  update_editions_by_pk(
    _set: { winner_id: $application_id }
    pk_columns: { id: $id }
  ) {
    ...Edition
    winner {
      id
      name
    }
  }
}
